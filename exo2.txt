
•Est-ce qu’il y a une différence entre votre analyse statique et votre analyse dynamique?Si, oui quelles sont ces différences?

		Oui, bien-sûr il y'a une différence entre mon analyse statique et mon analyse dynamique : 
		En ayant comparé le graphe d'appel généré grâce aux 2 analyses, je constate que celui de l'analyse  
		statique est bien plus grand et bien plus imposant que celui de l'analyse dynamique. 

•Si vous avez des différences,  quelles sont les causes?  Pourquoi avez vous un résultat différent?

		Ces différences s'explique par le fait que l'analyse dynamique ne fait pas une couverture totale  
		des méthodes et de leurs invocations vues que ce dernier dépend d'une partie (ou parfois fortement) de l'exécution du 			programme (celui qui analysé) faite par l'utilisateur ( c.à.d. les données en entrée du programme ) alors que pour l'analyse 			statique on a une couverture complète (et même parfois un peu trop ) car on ne fait que balayer les lignes du  code source en 			entier . 

•Comment pouvez-vous améliorer l’analyse dynamique pour augmenter la couverture du graphe de dépendances?
		
		On pourrait améliorer l'analyse dynamique en faisant un mécanisme d'exécution de toutes les fonctionnalités d'un programme 
		sans pour autant susciter un utilisateur et ainsi on aurait un graphe de dépendance complet.   
		Par la je veux dire qu'il serait judicieux d'effectuer un jeu de test qui pourrait couvrir tous les cas d'utilisation  
		du programme et qui pourrait fournir les informations suffisantes pour pouvoir l'interpréter convenablement sous forme de 			notre graphe. 
		
•Comment pouvez-vous améliorer l’analyse statique pour augmenter la couverture du graphe de dépendances?

		Quant à l'analyse statique on pourrait l'améliorer en créant un mécanisme qui pourrait inclure la non prise en compte du  
		code mort dans le programme vu que l'analyse statique balaye complètement sans se demander si ce bout de  
		code serait un jour exécuté ou pas .
